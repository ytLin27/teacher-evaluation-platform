version: '3.8'

services:
  # API Gateway (Nginx)
  gateway:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - data-integration-service
      - evaluation-service
      - reporting-service
      - document-service
    networks:
      - teacher-eval-network

  # Authentication Service
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    environment:
      - PORT=3001
      - JWT_SECRET=your_jwt_secret_here
      - POSTGRES_URL=postgresql://auth_user:auth_pass@postgres:5432/auth_db
    depends_on:
      - postgres
      - redis
    networks:
      - teacher-eval-network

  # Data Integration Service (Schoolday Mock + OneRoster)
  data-integration-service:
    build:
      context: ./services/data-integration
      dockerfile: Dockerfile
    environment:
      - PORT=3002
      - POSTGRES_URL=postgresql://data_user:data_pass@postgres:5432/data_db
      - MONGODB_URL=mongodb://mongo:27017/schoolday_data
    depends_on:
      - postgres
      - mongo
      - redis
    networks:
      - teacher-eval-network

  # Evaluation Engine Service
  evaluation-service:
    build:
      context: ./services/evaluation
      dockerfile: Dockerfile
    environment:
      - PORT=3003
      - POSTGRES_URL=postgresql://eval_user:eval_pass@postgres:5432/eval_db
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=your_influx_token
    depends_on:
      - postgres
      - influxdb
    networks:
      - teacher-eval-network

  # Reporting Service
  reporting-service:
    build:
      context: ./services/reporting
      dockerfile: Dockerfile
    environment:
      - PORT=3004
      - POSTGRES_URL=postgresql://report_user:report_pass@postgres:5432/report_db
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      - postgres
      - influxdb
    networks:
      - teacher-eval-network

  # Document Management Service
  document-service:
    build:
      context: ./services/documents
      dockerfile: Dockerfile
    environment:
      - PORT=3005
      - MONGODB_URL=mongodb://mongo:27017/documents
    depends_on:
      - mongo
    volumes:
      - ./volumes/documents:/app/uploads
    networks:
      - teacher-eval-network

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api
    ports:
      - "5173:5173"
    networks:
      - teacher-eval-network

  # PostgreSQL (业务数据)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=teacher_evaluation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - teacher-eval-network

  # MongoDB (文档存储)
  mongo:
    image: mongo:6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo_password
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - teacher-eval-network

  # InfluxDB (时序数据)
  influxdb:
    image: influxdb:2.7-alpine
    environment:
      - INFLUXDB_DB=teacher_metrics
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin_password
    volumes:
      - influx_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    networks:
      - teacher-eval-network

  # Redis (缓存 + 消息队列)
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - teacher-eval-network

  # Keycloak (OIDC认证服务器)
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin_password
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak_password
    command: start-dev
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - teacher-eval-network

  # Faux Schoolday Server (高保真API模拟)
  faux-schoolday:
    build:
      context: ./services/faux-schoolday
      dockerfile: Dockerfile
    environment:
      - PORT=3006
    ports:
      - "3006:3006"
    networks:
      - teacher-eval-network

  # Prometheus (监控)
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - teacher-eval-network

  # Grafana (监控面板)
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - teacher-eval-network

volumes:
  postgres_data:
  mongo_data:
  influx_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  teacher-eval-network:
    driver: bridge